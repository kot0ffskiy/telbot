import aiogram
from datetime import datetime
import logging
import requests
import re
import time

import text
from sqlighter import SQLighter
from config import API_TOKEN
from os import environ

logging.basicConfig(level=logging.INFO)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
# API_TOKEN = environ.get("API_KEY")
bot = aiogram.Bot(token=API_TOKEN)
dp = aiogram.dispatcher.Dispatcher(bot)


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
datbas = SQLighter('db.db')
db = [None]

@dp.message_handler(commands=['start'])
async def send_welcome(message: aiogram.types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
    mess = text.welmes(message.from_user.full_name)
    url="https://sun9-82.userapi.com/s/v1/if1/SJv4SU-iaqJi7Tqa3FloojP7GsNEyKT8yk39CIZj0GzFkIDMn-MNpQsXMclSbgW37Sh1wV-o.jpg?size=540x1080&quality=96&type=album"
    await bot.send_photo(message.from_user.id, url, caption=mess, parse_mode='html')

@dp.message_handler(commands=['toha'])
async def website(message: aiogram.types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /toha. –í—ã–≤–æ–¥–∏—Ç —Ñ–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞'''
    url="https://sun9-82.userapi.com/s/v1/if1/SJv4SU-iaqJi7Tqa3FloojP7GsNEyKT8yk39CIZj0GzFkIDMn-MNpQsXMclSbgW37Sh1wV-o.jpg?size=540x1080&quality=96&type=album"
    await bot.send_photo(message.from_user.id, url, caption="Look at this perfect man")

@dp.message_handler(commands=["convert"])
async def valuta(message: aiogram.types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /convert. –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã'''
    conv1 = aiogram.types.KeyboardButton("USD -> RUR")
    conv2 = aiogram.types.KeyboardButton("RUR -> USD")
    markup = aiogram.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(conv1, conv2)
    await bot.send_message(message.from_user.id, "–ö—É—Ä—Å —á–µ–≥–æ –∫ —á–µ–º—É –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?", reply_markup=markup)

@dp.message_handler(commands=['exchange'])  
async def exchange_command(message: aiogram.types.Message):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /exchange. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç Inline-–∫–Ω–æ–ø–∫–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
        –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –Ω–∏—Ö'''  
    keyboard = aiogram.types.InlineKeyboardMarkup()  
    keyboard.row(  
        aiogram.types.InlineKeyboardButton('USD', callback_data='get-USD')  
    )  
    keyboard.row(  
        aiogram.types.InlineKeyboardButton('BTC', callback_data='get-BTC'),  
        aiogram.types.InlineKeyboardButton('ETH', callback_data='get-ETH')  
    )  

    await bot.send_message(  
        message.from_user.id,   
        'Click on the currency of choice:',  
        reply_markup=keyboard  
    )

@dp.message_handler(content_types=['text'])
async def convert(message: aiogram.types.Message):
    '''–û—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–æ–º.
        –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–æ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞,
        —Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏. –ò–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±
        –æ—à–∏–±–∫–µ –≤–≤–æ–¥–∞'''
    mes = re.sub("[^0-9]", "", message.text)
    if message.text == "USD -> RUR" or message.text == "RUR -> USD":
        db.append(message.text)
        await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫–æ–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
    elif db[-1] == "USD -> RUR" and mes.isdigit():
        req = requests.get("https://yobit.net/api/3/ticker/usd_rur")
        response = req.json()
        doll = response["usd_rur"]["sell"]
        answ = f'${message.text} = ‚ÇΩ{float(message.text) * doll}'
        await bot.send_message(message.from_user.id, answ)
    elif db[-1] == "RUR -> USD" and mes.isdigit():
        req = requests.get("https://yobit.net/api/3/ticker/usd_rur")
        response = req.json()
        doll = response["usd_rur"]["sell"]
        answ = f'‚ÇΩ{message.text} = ${float(message.text) / doll}'
        await bot.send_message(message.from_user.id, answ)
    elif message.text == "–†–ê–°–°–ú–ï–®–ò –ú–ï–ù–Ø":
        url = "https://sun1-98.userapi.com/s/v1/ig2/Qda4VVsQk0Zf0hrSLPGrDSSkVMeqSk-I8awf6obn_4cwOZl_aHlYrcOS-MwJqhW--oKNXS-QvKFPQX-tyTY8ln6z.jpg?size=1279x1424&quality=96&type=album"
        await bot.send_photo(message.from_user.id, url, caption="–í—ã –≥–æ—Ç–æ–≤—ã, –¥–µ—Ç–∏?")
        time.sleep(2)
        mess = text.anekdot()
        keyboard = aiogram.types.InlineKeyboardMarkup()
        button = aiogram.types.InlineKeyboardButton('–ë–æ–ª—å—à–µ —Ç–∞–∫–æ–≥–æ —Ç—É—Ç üëâüèª', url='https://vk.com/jumoreski')
        keyboard.add(button)
        await bot.send_photo(message.from_user.id, mess[1], caption=mess[0], reply_markup=keyboard)       
    else:
        await bot.send_message(message.from_user.id, "–•–æ—Ç–∏—Ç–µ —à—É—Ç–∫—É? –ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –†–ê–°–°–ú–ï–®–ò –ú–ï–ù–Ø")

@dp.callback_query_handler(lambda call: True)  
async def iq_callback(query: aiogram.types.CallbackQuery):
    '''–û–±—Ä–∞–±–æ—Ç—á–∏–∫ call-back'–æ–≤. –ï—Å–ª–∏ callback –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å get-, —Ç–æ
        –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ü–µ–Ω–∞—Ä–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã'''  
    data = query.data  
    if data.startswith('get-'):  
        await get_ex_callback(query)

async def get_ex_callback(query):
    '''–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã'''  
    await bot.answer_callback_query(query.id)  
    await send_exchange_result(query.message, query.data[4:])

async def send_exchange_result(message, ex_code):
    '''–í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –Ω—É–∂–Ω–æ–π –≤–∞–ª—é—Ç—ã
        –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ—ë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'''  
    ex = await get_exchange(ex_code)  
    await bot.send_message(  
        message.chat.id, ex, parse_mode='HTML'  
    )

async def get_exchange(code):
    '''–ù–∞ –≤—Ö–æ–¥ –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω—É –∏–∑ —Ç—Ä—ë—Ö —Å—Ç—Ä–æ–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤–∞–ª—é—Ç—ã.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –∫—É—Ä—Å–æ–º'''
    if code == "USD":
        req = requests.get("https://yobit.net/api/3/ticker/usd_rur")
        response = req.json()
        sell_price = response["usd_rur"]["sell"]
        answ = f'–ù–∞ –º–æ–º–µ–Ω—Ç {datetime.now().strftime("%d-%m-%Y %H:%M:%S")} –î–æ–ª–ª–∞—Ä —Ç–æ—Ä–≥—É–µ—Ç—Å—è –ø–æ {sell_price} —Ä—É–±–ª–µ–π'
        return answ
    elif code == "BTC":
        req = requests.get("https://yobit.net/api/3/ticker/btc_usd")
        response = req.json()
        sell_price = response["btc_usd"]["sell"]
        answ = (f'–ù–∞ –º–æ–º–µ–Ω—Ç {datetime.now().strftime("%d-%m-%Y %H:%M:%S")} –±–∏—Ç–∫–æ–∏–Ω —Ç–æ—Ä–≥—É–µ—Ç—Å—è –ø–æ {sell_price}$')
        return answ
    elif code == "ETH":
        req = requests.get("https://yobit.net/api/3/ticker/eth_usd")
        response = req.json()
        sell_price = response["eth_usd"]["sell"]
        answ = (f'–ù–∞ –º–æ–º–µ–Ω—Ç {datetime.now().strftime("%d-%m-%Y %H:%M:%S")} —ç—Ñ–∏—Ä —Ç–æ—Ä–≥—É–µ—Ç—Å—è –ø–æ {sell_price}$')
        return answ


if __name__ == "__main__":
    aiogram.executor.start_polling(dp)
